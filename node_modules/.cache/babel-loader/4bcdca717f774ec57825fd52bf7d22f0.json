{"ast":null,"code":"var _jsxFileName = \"/home/nathanw/dev/react/continuance-client/src/todo.js\";\nimport React, { Component } from \"react\";\nimport { Input, List } from \"antd\";\nimport \"antd/dist/antd.css\";\nexport default class Todo extends Component {\n  constructor() {\n    super(); // Initialize the state\n\n    this.handlePressEnter = e => {\n      // Create a todo object containing its index and content\n      const todo = {\n        index: this.state.todos.length,\n        content: e.target.value\n      }; // Add the todo to our array\n\n      const newTodos = this.state.todos.concat(todo);\n      this.setState({\n        value: \"\",\n        todos: newTodos\n      });\n    };\n\n    this.state = {\n      value: \"\",\n      todos: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"todoContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"TODO App\"), React.createElement(Input, {\n      placeholder: \"What needs to be done?\",\n      value: this.state.value,\n      onPressEnter: this.handlePressEnter,\n      onInput: event => this.setState({\n        value: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(List, {\n      locale: {\n        emptyText: \"No todo items\"\n      },\n      dataSource: this.state.todos,\n      renderItem: item => React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, item.content),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/nathanw/dev/react/continuance-client/src/todo.js"],"names":["React","Component","Input","List","Todo","constructor","handlePressEnter","e","todo","index","state","todos","length","content","target","value","newTodos","concat","setState","render","event","emptyText","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,MAA5B;AAEA,OAAO,oBAAP;AAEA,eAAe,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAC1CI,EAAAA,WAAW,GAAG;AACZ,YADY,CAGZ;;AAHY,SAUdC,gBAVc,GAUKC,CAAC,IAAI;AACtB;AACA,YAAMC,IAAI,GAAG;AACXC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADb;AAEXC,QAAAA,OAAO,EAAEN,CAAC,CAACO,MAAF,CAASC;AAFP,OAAb,CAFsB,CAOtB;;AACA,YAAMC,QAAQ,GAAG,KAAKN,KAAL,CAAWC,KAAX,CAAiBM,MAAjB,CAAwBT,IAAxB,CAAjB;AAEA,WAAKU,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,EADK;AAEZJ,QAAAA,KAAK,EAAEK;AAFK,OAAd;AAID,KAxBa;;AAIZ,SAAKN,KAAL,GAAa;AACXK,MAAAA,KAAK,EAAE,EADI;AAEXJ,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID;;AAkBDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,KAAD;AACE,MAAA,WAAW,EAAC,wBADd;AAEE,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWK,KAFpB;AAGE,MAAA,YAAY,EAAE,KAAKT,gBAHrB;AAIE,MAAA,OAAO,EAAEc,KAAK,IAAI,KAAKF,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAEK,KAAK,CAACN,MAAN,CAAaC;AAAtB,OAAd,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EASE,oBAAC,IAAD;AACE,MAAA,MAAM,EAAE;AAAEM,QAAAA,SAAS,EAAE;AAAb,OADV;AAEE,MAAA,UAAU,EAAE,KAAKX,KAAL,CAAWC,KAFzB;AAGE,MAAA,UAAU,EAAEW,IAAI,IAAI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYA,IAAI,CAACT,OAAjB,CAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAiBD;;AA7CyC","sourcesContent":["import React, { Component } from \"react\";\nimport { Input, List } from \"antd\";\n\nimport \"antd/dist/antd.css\";\n\nexport default class Todo extends Component {\n  constructor() {\n    super();\n\n    // Initialize the state\n    this.state = {\n      value: \"\",\n      todos: []\n    };\n  }\n\n  handlePressEnter = e => {\n    // Create a todo object containing its index and content\n    const todo = {\n      index: this.state.todos.length,\n      content: e.target.value\n    };\n\n    // Add the todo to our array\n    const newTodos = this.state.todos.concat(todo);\n\n    this.setState({\n      value: \"\",\n      todos: newTodos\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"todoContainer\">\n        <h1>TODO App</h1>\n        <Input\n          placeholder=\"What needs to be done?\"\n          value={this.state.value}\n          onPressEnter={this.handlePressEnter}\n          onInput={event => this.setState({ value: event.target.value })}\n        />\n\n        <List\n          locale={{ emptyText: \"No todo items\" }}\n          dataSource={this.state.todos}\n          renderItem={item => <List.Item>{item.content}</List.Item>}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}